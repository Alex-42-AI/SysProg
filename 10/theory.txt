Създаване (отваряне) на споделена памет
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/mman.h>
int shm_open(const char *name, int oflag, mode_t mode) - създава (отваря) споделена памет

oflag:
O_RDONLY - отваря паметта само за четене
O_RDWR - отваря паметта за четене и писане
O_CREAT - ако паметта не съществува, се създава
O_EXCL - заедно с O_CREAT, ако паметта съществува връща грешка EEXIST
O_TRUNC - ако паметта същестува, прави размера й 0 байта

Задаване размер на споделена памет
#include <unistd.h>
#include <sys/types.h>
int ftruncate(int fd, off_t length) - задава размер на споделената памет

Присъединяване на споделена памет
#include <sys/mman.h>
void *mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset) - присъединява споделена памет към адресното пространство на процеса

prot:
PROT_EXEC - паметта може да се изпълнява
PROT_READ - паметта може да се чете
PROT_WRITE - паметта може да се пише
PROT_NONE - паметта не може да се достъпва

flags:
MAP_SHARED - промените се виждат от други процеси, които са присъединили същата памет
MAP_PRIVATE - промените не се пренасят в споделената памет и не се виждат от други процеси

Отделяне на споделена памет
#include <sys/mman.h>
int munmap(void *addr, size_t length) - отделя споделената памет от адресното пространство на процеса

Затваряне на споделена памет
#include <unistd.h>
int close(int fd) - затваря споделена памет

Унищожаване на споделена памет
#include <sys/mman.h>
int shm_unlink(const char *name) - унищожава споделена памет
