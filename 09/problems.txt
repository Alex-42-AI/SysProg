Write a C program, that creates a queue with default attributes. It reads the attributes and prints them out.
Write a C program, that creates a queue, sends a message in it, then reads it and prints it out.
Write a C program, that creates a queue and starts a process. 1 of them reads the contents of a file, the name of which is passed as a parameter in the command line and sends it in the queue. The other one receives messages from the queue and prints them out.
Write a C program, that creates a queue and starts a process. 1 of them reads from the standard input and sends the read text in the queue. The other one receives messages and writes them down in a file, the name of which is passed as a parameter in the command line. (Keep track of the file contents during an execution from another terminal for example)
Write 2 C programs, that communicate with one another via a shared queue, the name of which is defined in a common header file. 1 of the processes reads the contents of a file, the name of which is passed as a parameter in its command like and sends it in the queue. The other one receives messages from the queue and prints them out. (Start the receiver before the sender)
Write 2 C programs, that communicate with one another via a shared queue, the name of which is defined in a common header file. 1 of the processes reads text from the standard input and sends it in the queue. The other one receives messages from the queue and writes them in a file, the name of which is passed as a parameter in its command line. (Keep track of the file contents during an execution from another terminal for example)
