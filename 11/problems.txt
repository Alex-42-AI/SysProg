Write a C program, that creates a semaphore, reads its value, prints it out and destroys the semaphore.
Write a C program, that synchronizes 2 related processes via a semaphore. Both processes work simoltaneously and should print out text on the standard output in a particular order. 1 waits a few seconds and writes. The other one writes after it.
*Write a C program, that synchronizes 2 processes via a semaphore. Each process opens a file without the O_APPEND flag and adds text to it several times the following way - it positions itself at the end, waits a few seconds and writes.
